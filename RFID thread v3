# This is my first attempt at threading to get TWO RFIDs reading in "simultaneously" without lag

import serial
import threading
import time
import Queue as queue # for terminal
import queue # for Thonny
import atexit

# change these as necessary
vole_1 = "72C526"
vole_2 = "736C8E"

vole1_queue = queue.Queue()
vole2_queue = queue.Queue()

def rfid_1():
    ser_1 = serial.Serial(
        port = '/dev/serial0',
        baudrate = 9600,
        parity = serial.PARITY_NONE,
        bytesize = serial.EIGHTBITS,
        timeout = 1
    )

    while True:
        line_1 = ser_1.readline()
        if vole_1 in line_1.decode(): 
            vole1_queue.put("1")
        if vole_2 in line_1.decode():
            vole2_queue.put("1")
        
# for some reason the code is straight up ignoring the keyboard interrupt and atexit lines
# it goes straight into doing the print statements below 
        if KeyboardInterrupt:
            atexit.register(end)
#            print("RFID 1")
#            print("Vole 1")
#            print(list(vole1_queue.queue))
#            print("Vole 2")
#            print(list(vole2_queue.queue))
#            print("")
            
        time.sleep(0.05)
            
def rfid_2():
    ser_2 = serial.Serial(
        port = '/dev/ttySC0',
        baudrate = 9600,
        parity = serial.PARITY_NONE,
        bytesize = serial.EIGHTBITS,
        timeout = 1
    )

    while True:
        line_2 = ser_2.readline()
        if vole_1 in line_2.decode(): 
            vole1_queue.put("2")
        if vole_2 in line_2.decode():
            vole2_queue.put("2")
        
        if KeyboardInterrupt:
            atexit.register(end)
#            print("RFID 2")
#            print("Vole 1")
#            print(list(vole1_queue.queue))
#            print("Vole 2")
#            print(list(vole2_queue.queue))
#            print("")
            
        time.sleep(0.05)

def end():
    r1.join()
    r2.join()
    
    ser_1.close()
    ser_2.close()
    
    print("Finished \n")
    print(list(vole1_queue.queue))
    print(list(vole2_queue.queue))

if __name__ == "__main__":
    r1 = threading.Thread(target = rfid_1)
    r2 = threading.Thread(target = rfid_2)

    r1.start()
    r2.start()
